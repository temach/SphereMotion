import mathfrom OpenGL.GL import *from OpenGL.GLU import *from agk.matrix44 import *from agk.vector3 import *class ColorMesh(object):    def __init__(self, matrix, reader, colour):        self.id = id(self)        self.colour = colour        self.matrix = matrix.copy()        self.vertices = reader.vertices[:]        self.normals = reader.normals[:]        self.v_n_index = reader.two_indices[:]    def apply_matrix(self):        trans = self.matrix.transform        self.vertices = [ trans(v) for v in self.vertices ]    def draw_in_series(self):        glColor( self.colour )        for index_ref in self.v_n_index:            glVertex3fv( self.vertices[index_ref[0]] )            glNormal3fv( self.normals[index_ref[1]] )